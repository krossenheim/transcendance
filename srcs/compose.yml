services:
  nginx:
    container_name: nginx
    image: nginx
    env_file:
      - ./globals.env
      - ./nginx/site.env
    build:
      context: ./nginx
    restart: always
    ports:
      - "443:443"
    networks:
      transcendance_network:
        ipv4_address: ${NGINX_IPV4_ADDRESS}
  backend_hub:
    container_name: backend_hub
    image: backend_hub
    env_file:
      - ./globals.env
      - ./backend_hub/backend_hub.env
    build:
      context: ./backend_hub
    restart: always
    networks:
      transcendance_network:
        ipv4_address: ${HUB_IPV4_ADDRESS}
  chatroom_service:
    container_name: chatroom_service
    image: chatroom_service
    env_file:
      - ./globals.env
      - ./chatroom_service/chatroom_service.env
    build:
      context: ./chatroom_service
    restart: always
    networks:
      transcendance_network:
        ipv4_address: ${CHATROOM_IPV4_ADDRESS}
    depends_on:
      backend_hub:
        condition: service_healthy
  database_service:
    container_name: database_service
    image: database_service
    env_file:
      - ./globals.env
      - ./database/database.env
    build:
      context: ./database
    restart: always
    networks:
      transcendance_network:
        ipv4_address: ${DATABASE_IPV4_ADDRESS}
    depends_on:
      backend_hub:
        condition: service_healthy
    volumes:
      - databases:/etc/database_data
  auth_service:
    container_name: auth_service
    image: auth_service
    env_file:
      - ./globals.env
      - ./auth/auth.env
    build:
      context: ./auth
    restart: always
    networks:
      transcendance_network:
        ipv4_address: ${AUTH_IPV4_ADDRESS}
    depends_on:
      backend_hub:
        condition: service_healthy

volumes:
  databases:
    name: databases
    driver_opts:
      type: none
      o: bind
      device: ${VOLUMES_DIR}

networks:
  transcendance_network:
    name: transcendance_network
    driver: bridge
    ipam:
      config:
        - subnet: ${TR_NETWORK_SUBNET}

